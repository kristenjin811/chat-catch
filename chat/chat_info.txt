1.everything will lead to main

-API DIRECTORY - holds the routers,
these are the definitions of our HTTP endpoints.
these endpoints will use logic/functions that are imported from:
1.files in the controllers directory
2.models from our models.py file
3.requests from our requests.py file
4.functions from our mongodb.py
-Inside of api/__init__.py file:
all routers are bundled together
and main.py file imports all routers as api_router

-CONTROLLERS DIRECTORY - holds logic/functions for querying mongodb
these functions are how we can:
1.insert documents into collections (enabling persistence in items created in api and websockets in the current session)
2.find documents inside collections (enabling verification and showing items created in previous sessions)
3.update documents inside collections (enabling updates to items such as chatroom memberships)
4.delete documents inside collections (deleting items made in current or previous sessions)
controller files will import:
1. functions from mongodb.py file
2. variables from config.py file
3. models from model.py file
-I have seen authorization handled in these controller files
-many controller functions are imported into main.py

REQUESTS.PY - holds request classes
As far as I can tell these are essentially forms for
the browser to present the user such as:
1. create chatroom request form
2. signup request form
3. login request form
-I am seeing these only imported into controllers

-MONGODB.PY file - holds high level mongodb logic such as:
1. getting correct db
2. connect to mongodb
3. disconnect from mongodb
-mongodb.py file will import:
1. variables from config.py file
-functions are imported into main.py

-WEBSOCKET_MANAGER.PY (called notifier in jmoussa chat-app-be)- holds high level websocket logic such as:
1. connecting to a websocket
2. disconnecting from a websocket
3. sending a personal message to a single user
4. broadcasting a message to all users
-ConnectionManager class is imported into main.py and nowhere else

-MAIN.PY (called app.py in chat-app-be) - primary file of backend
1. defines app behavior on startup and shutdown
2. defines app behavior in websocket endpoint(s)


Websocket Notes:
Needs to be a websocket on back-end and front-end
purpose of back-end websocket =
